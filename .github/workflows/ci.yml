name: Node.js CI

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2

    - name: Set up Node.js
      uses: actions/setup-node@v3
      with:
        node-version: '20'

    - name: Install dependencies
      run: npm install

    - name: Build
      run: npm run build

    - name: Run Linter
      run: npm run lint

    - name: Set environment variables
      env:
        DB_NAME: ${{ secrets.DB_NAME }}
        DB_USER: ${{ secrets.DB_USER }}
        DB_PASS: ${{ secrets.DB_PASS }}
        DB_HOST: ${{ secrets.DB_HOST }}
        DB_PORT: ${{ secrets.DB_PORT }}
        LOG_DIRECTORY: ${{ secrets.LOG_DIRECTORY }}
        LOG_LEVEL: ${{ secrets.LOG_LEVEL }}
        LOG_OUTPUT_MODE: ${{ secrets.LOG_OUTPUT_MODE }}
        REDIS_HOST: ${{ secrets.REDIS_HOST }}
        REDIS_PORT: ${{ secrets.REDIS_PORT }}
        REDIS_CACHE_TIMEOUT: ${{ secrets.REDIS_CACHE_TIMEOUT }}
        MYSQL_DATABASE: ${{ secrets.MYSQL_DATABASE }}
        MYSQL_USER: ${{ secrets.MYSQL_USER }}
        MYSQL_PASSWORD: ${{ secrets.MYSQL_PASSWORD }}
        MYSQL_ROOT_PASSWORD: ${{ secrets.MYSQL_ROOT_PASSWORD }}
        SERVER_PORT: ${{ secrets.SERVER_PORT }}
        JWT_PRIVATE_KEY: ${{ secrets.JWT_PRIVATE_KEY }}
        JWT_PUBLIC_KEY: ${{ secrets.JWT_PUBLIC_KEY }}
        JWT_TOKEN_EXPIRED: ${{ secrets.JWT_TOKEN_EXPIRED }}

    - name: Start Docker Compose stack
      run: docker-compose up -d

    - name: Wait for services to be ready
      run: ./wait-for-it.sh ${{ secrets.DB_HOST }}:${{ secrets.DB_PORT }} --timeout=30 --strict -- echo "Database is up"

    - name: Run Migrations
      run: npm run migrate

    - name: Run Seeders
      run: npm run seed

    - name: Run Linter
      run: npm run lint

    - name: Run Tests
      run: npm test   

    - name: Build Docker Image
      run: docker build -t lxpool/svt-app:latest .

    - name: Login to Docker Hub
      uses: docker/login-action@v2
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_PASSWORD }}

    - name: Push Docker Image
      run: docker push ${{ secrets.DOCKERHUB_USERNAME }}/svt-app:latest

    - name: Shutdown Docker Compose stack
      run: docker-compose down

