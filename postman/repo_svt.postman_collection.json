{
	"info": {
		"_postman_id": "5a38c9cf-82c0-4f5b-91d5-bcb32b8ecd17",
		"name": "repo_svt",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "38812634"
	},
	"item": [
		{
			"name": "varco",
			"item": [
				{
					"name": "add_varco",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"pm.test(\"Response time is less than 2000ms\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(2000);",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{JWT_TOKEN}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"cod\": \"V009\",\n    \"descrizione\": \"Varco 09\",\n    \"latitudine\": 41.8888,\n    \"longitudine\": 12.83455,\n    \"stato\": \"attivo\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{PROTOCOL}}://{{HOST}}:{{PORT}}/{{VARCO_API}}",
							"protocol": "{{PROTOCOL}}",
							"host": [
								"{{HOST}}"
							],
							"port": "{{PORT}}",
							"path": [
								"{{VARCO_API}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "put_varco",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"pm.test(\"Response time is less than 2000ms\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(2000);",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{JWT_TOKEN}}",
									"type": "string"
								}
							]
						},
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"cod\": \"V009\",\n    \"descrizione\": \"Varco 09\",\n    \"latitudine\": 41.8888,\n    \"longitudine\": 12.83455,\n    \"stato\": \"attivo\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{PROTOCOL}}://{{HOST}}:{{PORT}}/{{VARCO_API}}/1",
							"protocol": "{{PROTOCOL}}",
							"host": [
								"{{HOST}}"
							],
							"port": "{{PORT}}",
							"path": [
								"{{VARCO_API}}",
								"1"
							]
						}
					},
					"response": []
				},
				{
					"name": "patch_varco",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"pm.test(\"Response time is less than 2000ms\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(2000);",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{JWT_TOKEN}}",
									"type": "string"
								}
							]
						},
						"method": "PATCH",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"cod\": \"V009\",\n    \"descrizione\": \"Varco 09\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{PROTOCOL}}://{{HOST}}:{{PORT}}/{{VARCO_API}}/1",
							"protocol": "{{PROTOCOL}}",
							"host": [
								"{{HOST}}"
							],
							"port": "{{PORT}}",
							"path": [
								"{{VARCO_API}}",
								"1"
							]
						}
					},
					"response": []
				},
				{
					"name": "get_varco_by_id",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"pm.test(\"Response time is less than 2000ms\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(2000);",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{JWT_TOKEN}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{PROTOCOL}}://{{HOST}}:{{PORT}}/{{VARCO_API}}/1",
							"protocol": "{{PROTOCOL}}",
							"host": [
								"{{HOST}}"
							],
							"port": "{{PORT}}",
							"path": [
								"{{VARCO_API}}",
								"1"
							]
						}
					},
					"response": []
				},
				{
					"name": "delete_varco",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"pm.test(\"Response time is less than 2000ms\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(2000);",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{JWT_TOKEN}}",
									"type": "string"
								}
							]
						},
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{PROTOCOL}}://{{HOST}}:{{PORT}}/{{VARCO_API}}/1",
							"protocol": "{{PROTOCOL}}",
							"host": [
								"{{HOST}}"
							],
							"port": "{{PORT}}",
							"path": [
								"{{VARCO_API}}",
								"1"
							]
						}
					},
					"response": []
				},
				{
					"name": "get_varchi",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"pm.test(\"Response time is less than 2000ms\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(2000);",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{JWT_TOKEN}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{PROTOCOL}}://{{HOST}}:{{PORT}}/{{VARCO_API}}/",
							"protocol": "{{PROTOCOL}}",
							"host": [
								"{{HOST}}"
							],
							"port": "{{PORT}}",
							"path": [
								"{{VARCO_API}}",
								""
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "veicolo",
			"item": [
				{
					"name": "add_veicolo",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"pm.test(\"Response time is less than 2000ms\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(2000);",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{JWT_TOKEN}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"tipo\": \"automobile\",\n    \"targa\": \"PO786YY\",\n    \"stato\": \"acquisito\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{PROTOCOL}}://{{HOST}}:{{PORT}}/{{VEICOLO_API}}",
							"protocol": "{{PROTOCOL}}",
							"host": [
								"{{HOST}}"
							],
							"port": "{{PORT}}",
							"path": [
								"{{VEICOLO_API}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "associate_user",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"pm.test(\"Response time is less than 2000ms\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(2000);",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{JWT_TOKEN}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"identificativo\": \"AUTOMOBILISTA_M\",\n    \"targa\": \"PP987UY\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{PROTOCOL}}://{{HOST}}:{{PORT}}/{{VEICOLO_API}}/associate_user",
							"protocol": "{{PROTOCOL}}",
							"host": [
								"{{HOST}}"
							],
							"port": "{{PORT}}",
							"path": [
								"{{VEICOLO_API}}",
								"associate_user"
							]
						}
					},
					"response": []
				},
				{
					"name": "put_veicolo",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"pm.test(\"Response time is less than 2000ms\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(2000);",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{JWT_TOKEN}}",
									"type": "string"
								}
							]
						},
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"tipo\": \"camion\",\n    \"targa\": \"TR568OW\",\n    \"stato\": \"in_attesa\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{PROTOCOL}}://{{HOST}}:{{PORT}}/{{VEICOLO_API}}/1",
							"protocol": "{{PROTOCOL}}",
							"host": [
								"{{HOST}}"
							],
							"port": "{{PORT}}",
							"path": [
								"{{VEICOLO_API}}",
								"1"
							]
						}
					},
					"response": []
				},
				{
					"name": "patch_veicolo",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"pm.test(\"Response time is less than 2000ms\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(2000);",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{JWT_TOKEN}}",
									"type": "string"
								}
							]
						},
						"method": "PATCH",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"tipo\": \"automobile\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{PROTOCOL}}://{{HOST}}:{{PORT}}/{{VEICOLO_API}}/1",
							"protocol": "{{PROTOCOL}}",
							"host": [
								"{{HOST}}"
							],
							"port": "{{PORT}}",
							"path": [
								"{{VEICOLO_API}}",
								"1"
							]
						}
					},
					"response": []
				},
				{
					"name": "get_veicolo_by_id",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"pm.test(\"Response time is less than 2000ms\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(2000);",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{JWT_TOKEN}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{PROTOCOL}}://{{HOST}}:{{PORT}}/{{VEICOLO_API}}/1",
							"protocol": "{{PROTOCOL}}",
							"host": [
								"{{HOST}}"
							],
							"port": "{{PORT}}",
							"path": [
								"{{VEICOLO_API}}",
								"1"
							]
						}
					},
					"response": []
				},
				{
					"name": "delete_veicolo",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"pm.test(\"Response time is less than 2000ms\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(2000);",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{JWT_TOKEN}}",
									"type": "string"
								}
							]
						},
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{PROTOCOL}}://{{HOST}}:{{PORT}}/{{VEICOLO_API}}/1",
							"protocol": "{{PROTOCOL}}",
							"host": [
								"{{HOST}}"
							],
							"port": "{{PORT}}",
							"path": [
								"{{VEICOLO_API}}",
								"1"
							]
						}
					},
					"response": []
				},
				{
					"name": "get_veicoli",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"pm.test(\"Response time is less than 2000ms\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(2000);",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{JWT_TOKEN}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{PROTOCOL}}://{{HOST}}:{{PORT}}/{{VEICOLO_API}}/",
							"protocol": "{{PROTOCOL}}",
							"host": [
								"{{HOST}}"
							],
							"port": "{{PORT}}",
							"path": [
								"{{VEICOLO_API}}",
								""
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "tratta",
			"item": [
				{
					"name": "get_tratta_by_id",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"pm.test(\"Response time is less than 2000ms\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(2000);",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{JWT_TOKEN}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{PROTOCOL}}://{{HOST}}:{{PORT}}/{{TRATTA_API}}/1",
							"protocol": "{{PROTOCOL}}",
							"host": [
								"{{HOST}}"
							],
							"port": "{{PORT}}",
							"path": [
								"{{TRATTA_API}}",
								"1"
							]
						}
					},
					"response": []
				},
				{
					"name": "get_tratte",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"pm.test(\"Response time is less than 2000ms\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(2000);",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{JWT_TOKEN}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{PROTOCOL}}://{{HOST}}:{{PORT}}/{{TRATTA_API}}",
							"protocol": "{{PROTOCOL}}",
							"host": [
								"{{HOST}}"
							],
							"port": "{{PORT}}",
							"path": [
								"{{TRATTA_API}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "add_tratta",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"pm.test(\"Response time is less than 2000ms\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(2000);",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{JWT_TOKEN}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"cod\": \"T05\",\n    \"descrizione\": \"test 05\",\n    \"id_varco_ingresso\": 3,\n    \"id_varco_uscita\": 5,\n    \"distanza\": 50,\n    \"stato\": \"attivo\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{PROTOCOL}}://{{HOST}}:{{PORT}}/{{TRATTA_API}}",
							"protocol": "{{PROTOCOL}}",
							"host": [
								"{{HOST}}"
							],
							"port": "{{PORT}}",
							"path": [
								"{{TRATTA_API}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "put_tratta",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"pm.test(\"Response time is less than 2000ms\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(2000);",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{JWT_TOKEN}}",
									"type": "string"
								}
							]
						},
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"cod\": \"T05\",\n    \"descrizione\": \"testxxx 05\",\n    \"id_varco_ingresso\": 3,\n    \"id_varco_uscita\": 5,\n    \"distanza\": 50,\n    \"stato\": \"attivo\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{PROTOCOL}}://{{HOST}}:{{PORT}}/{{TRATTA_API}}/1",
							"protocol": "{{PROTOCOL}}",
							"host": [
								"{{HOST}}"
							],
							"port": "{{PORT}}",
							"path": [
								"{{TRATTA_API}}",
								"1"
							]
						}
					},
					"response": []
				},
				{
					"name": "patch_tratta",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"pm.test(\"Response time is less than 2000ms\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(2000);",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{JWT_TOKEN}}",
									"type": "string"
								}
							]
						},
						"method": "PATCH",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"cod\": \"T05\",\n    \"descrizione\": \"testo 05\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{PROTOCOL}}://{{HOST}}:{{PORT}}/{{TRATTA_API}}/1",
							"protocol": "{{PROTOCOL}}",
							"host": [
								"{{HOST}}"
							],
							"port": "{{PORT}}",
							"path": [
								"{{TRATTA_API}}",
								"1"
							]
						}
					},
					"response": []
				},
				{
					"name": "delete_tratta",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"pm.test(\"Response time is less than 2000ms\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(2000);",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{JWT_TOKEN}}",
									"type": "string"
								}
							]
						},
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{PROTOCOL}}://{{HOST}}:{{PORT}}/{{TRATTA_API}}/1",
							"protocol": "{{PROTOCOL}}",
							"host": [
								"{{HOST}}"
							],
							"port": "{{PORT}}",
							"path": [
								"{{TRATTA_API}}",
								"1"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "transito",
			"item": [
				{
					"name": "get_transito_by_id",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"pm.test(\"Response time is less than 2000ms\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(2000);",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{JWT_TOKEN}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{PROTOCOL}}://{{HOST}}:{{PORT}}/{{TRANSITO_API}}/1",
							"protocol": "{{PROTOCOL}}",
							"host": [
								"{{HOST}}"
							],
							"port": "{{PORT}}",
							"path": [
								"{{TRANSITO_API}}",
								"1"
							]
						}
					},
					"response": []
				},
				{
					"name": "download_transito_img",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"pm.test(\"Response time is less than 2000ms\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(2000);",
									"});",
									"pm.test(\"Content-Type is present\", function () {",
									"    pm.response.to.have.header(\"Content-Type\");",
									"    const contentType = pm.response.headers.get(\"Content-Type\");",
									"",
									"    // Verifica se il Content-Type è uno dei tipi di immagine",
									"    pm.expect(contentType).to.satisfy(function(type) {",
									"        return type.includes(\"image/\");",
									"    }, \"Content-Type is an image type\");",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{JWT_TOKEN}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{PROTOCOL}}://{{HOST}}:{{PORT}}/{{TRANSITO_API}}/download/1",
							"protocol": "{{PROTOCOL}}",
							"host": [
								"{{HOST}}"
							],
							"port": "{{PORT}}",
							"path": [
								"{{TRANSITO_API}}",
								"download",
								"1"
							]
						}
					},
					"response": []
				},
				{
					"name": "get_transiti",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"pm.test(\"Response time is less than 2000ms\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(2000);",
									"});",
									"pm.test(\"response type\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData).to.be.an('array');",
									"});",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{JWT_TOKEN}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{PROTOCOL}}://{{HOST}}:{{PORT}}/{{TRANSITO_API}}?id_varco=&stato=illegibile",
							"protocol": "{{PROTOCOL}}",
							"host": [
								"{{HOST}}"
							],
							"port": "{{PORT}}",
							"path": [
								"{{TRANSITO_API}}"
							],
							"query": [
								{
									"key": "id_varco",
									"value": ""
								},
								{
									"key": "stato",
									"value": "illegibile"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "add_transito",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"pm.test(\"Response time is less than 2000ms\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(2000);",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{JWT_TOKEN}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "metadata",
									"value": "{\n    \"data_transito\": \"2024-04-06T17:20:00\",\n    \"id_varco\": 2,\n    \"targa\": \"PP987UY\", \n    \"speed\" : 50,\n    \"meteo\": \"sereno\",\n    \"veicolo_tipo\": \"automobile\"\n}",
									"type": "text"
								},
								{
									"key": "immagine",
									"type": "file",
									"src": "/home/l.cirillo/personale/univpm/programmazione_avanzata/project/repo_svt/documentazione/esempi_targhe/3.jpg"
								}
							]
						},
						"url": {
							"raw": "{{PROTOCOL}}://{{HOST}}:{{PORT}}/{{TRANSITO_API}}",
							"protocol": "{{PROTOCOL}}",
							"host": [
								"{{HOST}}"
							],
							"port": "{{PORT}}",
							"path": [
								"{{TRANSITO_API}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "patch_transito",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"pm.test(\"Response time is less than 2000ms\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(2000);",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{JWT_TOKEN}}",
									"type": "string"
								}
							]
						},
						"method": "PATCH",
						"header": [],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "immagine",
									"type": "file",
									"src": "/home/l.cirillo/personale/univpm/programmazione_avanzata/project/repo_svt/documentazione/esempi_targhe/2.jpg"
								}
							]
						},
						"url": {
							"raw": "{{PROTOCOL}}://{{HOST}}:{{PORT}}/{{TRANSITO_API}}/8",
							"protocol": "{{PROTOCOL}}",
							"host": [
								"{{HOST}}"
							],
							"port": "{{PORT}}",
							"path": [
								"{{TRANSITO_API}}",
								"8"
							]
						}
					},
					"response": []
				},
				{
					"name": "put_transito",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{JWT_TOKEN}}",
									"type": "string"
								}
							]
						},
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "metadata",
									"value": "{\n     \"data_transito\": \"2024-10-06T17:09:00.000Z\",\n    \"id_varco\": 1,\n    \"meteo\": \"sereno\",\n    \"targa\" : \"CC999DD\",\n    \"stato\": \"in attesa\"\n}",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "{{PROTOCOL}}://{{HOST}}:{{PORT}}/{{TRANSITO_API}}/3",
							"protocol": "{{PROTOCOL}}",
							"host": [
								"{{HOST}}"
							],
							"port": "{{PORT}}",
							"path": [
								"{{TRANSITO_API}}",
								"3"
							]
						}
					},
					"response": []
				},
				{
					"name": "delete_transito",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"pm.test(\"Response time is less than 2000ms\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(2000);",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{JWT_TOKEN}}",
									"type": "string"
								}
							]
						},
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{PROTOCOL}}://{{HOST}}:{{PORT}}/{{TRANSITO_API}}/3",
							"protocol": "{{PROTOCOL}}",
							"host": [
								"{{HOST}}"
							],
							"port": "{{PORT}}",
							"path": [
								"{{TRANSITO_API}}",
								"3"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "multa",
			"item": [
				{
					"name": "get_multe",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"pm.test(\"Response time is less than 2000ms\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(2000);",
									"});",
									"pm.test(\"response type\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData).to.be.an('array');",
									"});",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{JWT_TOKEN}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{PROTOCOL}}://{{HOST}}:{{PORT}}/{{MULTA_API}}?data_inizio=2024-01-01&data_fine=2024-10-12&format=json&targa=DS456RE",
							"protocol": "{{PROTOCOL}}",
							"host": [
								"{{HOST}}"
							],
							"port": "{{PORT}}",
							"path": [
								"{{MULTA_API}}"
							],
							"query": [
								{
									"key": "data_inizio",
									"value": "2024-01-01"
								},
								{
									"key": "data_fine",
									"value": "2024-10-12"
								},
								{
									"key": "format",
									"value": "json"
								},
								{
									"key": "targa",
									"value": "DS456RE"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "download_bollettino_pdf",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"pm.test(\"Response time is less than 2000ms\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(2000);",
									"});",
									"pm.test(\"Content-Type is present\", function () {",
									"    pm.response.to.have.header(\"Content-Type\");",
									"    const contentType = pm.response.headers.get(\"Content-Type\");",
									"",
									"    // Verifica se il Content-Type è uno dei tipi di immagine",
									"    pm.expect(contentType).to.satisfy(function(type) {",
									"        return type.includes(\"application/pdf\");",
									"    }, \"Content-Type is an image type\");",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{JWT_TOKEN}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{PROTOCOL}}://{{HOST}}:{{PORT}}/{{MULTA_API}}/download/8b4c6e63-bc97-4a31-92ed-0fb394115b3f",
							"protocol": "{{PROTOCOL}}",
							"host": [
								"{{HOST}}"
							],
							"port": "{{PORT}}",
							"path": [
								"{{MULTA_API}}",
								"download",
								"8b4c6e63-bc97-4a31-92ed-0fb394115b3f"
							]
						}
					},
					"response": []
				}
			]
		}
	]
}